import { isCharNumber, getNumberLeftAndRight, Index, replaceAt } from './utils'

export { };

const test = `
.|...\\....
|.-.\\.....
.....|-...
........|.
..........
.........\\
..../.\\\\..
.-.-/..|..
.|....-|.\\
..//.|....
`;

const task = `
\\...\\..........|..\\........../...............................\\.\\.....................................-........
..........................--............/.....-.../............-........................\\./.\\|\\...............
...|.-\\.|.......|......../.....-........|........................\\......|..............\\......|...............
...-\\.....................\\......../....../..............................|........-.........\\...-\\....-.......
.........\\|............/-....-......-................\\....-........|./.........-..|....................|......
..-.....\\........................-.....-..../..............||.............-.................|..........-.-././
......................-\\......................................-/......||.........-.-......./..................
|..\\................|.....\\.............\\.......|........-..................\\|.................|...-..........
............................|.....|.......\\../..........\\......\\../..|..../........-..\\.-......-..............
\\....-.....................\\....../............-/..|.........../-.........|.../................\\.......|\\...//
.......-.-........../........-.........\\..../......................|.............|.....\\....|......../........
.../......../.........|.....-.............|.....\\\\-.|..\\..........\\..|...............-.|...........-......-../
............./.............../......./.................-.................|/...||............|.............|\\..
...................-..................................../.\\..................|..........|........|...../..|./.
.........................|......\\..../...........|..-......|..-.-../..\\.......\\............................|..
.........\\..|...............//.........|................|................................./..-..-.............
......||...........|...|../.............../....-......|..\\.....-..........\\..................\\.........../....
............../-......|.................-......|........-...--................./.............|..........\\.....
......\\.|./...........\\...................\\..-.........-.....-.-.......|./....................../.|..\\|.......
./...........\\..|...................../....................................\\../.................\\...........\\.
..............|............................./...\\.............../.....-.........\\./..-.../\\\\..................
\\./|......\\............|.........................|....-../.......\\........./.............../-........../....\\.
....-................................\\....................../.|...|.................-...|.......--............
.......-....\\/../.................-/...-./...-...........................-.............\\...........|..........
................................................\\........./............../.....|.......\\......|........\\./....
..........-..../......-.............|...-.....\\..-......................-..\\.....|....../....\\./.....|........
.......-...../..................-....../........./......./..............|......-....|....|.\\....|......-./-...
......\\/.....................|.-.........-.....\\.....................-.-....|.................|.-\\./..........
............\\...........-................|....|....|-......\\..|/............\\........-...-..........-....\\....
...\\............-...........|.............|...............-......|.............\\..\\................\\..........
...........................|..........|..................\\..\\........|...../......|....|..........-...........
.......-.../..................-...\\\\.....\\..-.....|/..................................-.........../...........
/......\\.\\........................../|........................-........-..................-..............-.|..
../............|\\......|....|.........................../....-..\\.............../.............-........|......
........./.........|\\........................|.\\....................|\\........................|....../........
.../..........|......../....-......../.................\\................-...\\............/...........-....|...
...................../...../../..-........\\/............-./..|................../.............................
............./.......\\..-/.........\\..../..................|.\\...\\...-..-.-............\\..../....|........|\\..
...../........|..............\\..|.|...|.-......-....\\.......................-.\\.......\\...........|...........
..............\\..|................................/-.....-...|.............\\..//..\\......|...............|....
...............................-......|\\............../.\\.\\............./......\\..............................
............|/...\\.....|.......|..\\....................\\.../..................................................
|........../......../............\\../...\\...\\.....-........|../................\\-.............../.........\\...
.....|...-...................../..-...................\\........|./.......-...\\-.../....|.................|....
...........-..................................\\.......\\....../..............................|.................
........./.\\................\\...-.|........./......\\................-.../........|...\\.....\\.....|............
.-....../......./....-...................\\.............-....................|.-.\\./........................\\..
........./...../..........................-...............\\........-....................................\\.....
\\..|...........................\\/...-................................................./.......-..\\....\\.......
....-.|/../...../......./....................-..........-......-.........\\.........../...................\\....
.................................../.........|...........................\\.....-..../.........................
............/..../.../......\\........................-.......|............-........./|........-...............
../......../..........-.........................................................-.........\\..-|...............
...../../...................|.................|.........................................../......./..........\\
...|..........||......................./......./...-..|..\\/......./................\\.\\........../...\\.........
..-.\\\\..|................|....-.......................................-......../.../............|.............
..............-../...............................-.......................\\....................|..........././.
...\\............/.................|.-.|............./......|......-./...............\\.\\.................-.....
.............|.............\\......|.................-|...|.........|.....-......../.......|...................
...\\-............-..-................/.............-.......\\............\\.........-|...\\.............|........
..........|.....\\...../...\\....../|.|.|......../-....--....\\........|...........|..........\\..................
...............\\......./.....|............................|./.............-.|.......\\.-............\\.......|..
....-..........................|\\....................................................................-........
............\\........|...../\\/-........|./.......|..-........................../../.......-..........-........
-..\\............\\..\\.../.......\\.........\\..............\\....../...........-.......\\....................|.....
........|..........|.............|.............-..|..................|....-\\.././......|.............|........
..../......................../|..|......................|..............................|...................-..
.......-/.../........-........................\\....-./.-...........|........./....\\...........-...../.........
........./-\\........../.................-.......\\...................-...\\.......\\.-...........\\...............
.........................\\.../..........................||..|.|...............................................
...................-........./..../........................\\................-.....................|...........
...................................|.....\\...........|.........\\.../.-.-.......-....-....\\.............//.|.|.
..../............|-.......././.........-............\\.....-......-................-......\\........\\.........-.
.\\......................\\.|...\\.-........\\..............-..................-.........................../.../..
..............|..\\../...............\\|..........\\./...................\\...........|...........................
....|......\\.-\\.................-..................../........\\....-...../.............-.\\.|..................
......................-.|..|........................\\...............-..\\..-..../....../...........|...\\.......
...........|......\\................../....-...\\|................\\......../|........................|.........-
...........-.............-...-................\\...-.......|.........../........-..............................
............|................|....--.........../-.....|......\\.............../.........../...|................
-.....\\............/....../.......|.........../...............................-.....//.................-......
-..............|...........-..........|..-|-...-...........................................\\...........|......
...../......|........-...\\.................-......|.......-.......................|..................././..-..
\\..........................................\\...-..\\......./......-.......\\.....|..\\....\\.../.\\..........|...\\.
............./.........-............../....|..../...-....|...-........\\............\\...................|......
/.......|-..../..\\.....\\..............................\\............|..............-.....|..../............-...
............\\................................................/......\\..............\\.|........................
\\/..../.........|\\.....|.../....................../.../..-............-..........-.../.-..../.................
.......|-..|...................../................\\..............\\............/........../\\...|..../..........
........................................................................\\............/.....-.\\.-..............
.......................\\.........../........\\......./.........|.............\\..|....................-.........
.|.../-.......-.....\\...................|.........||..\\...|.-....|....\\..............\\.......-.|.......\\/.....
........../.|.........|............../........\\...........|.-..................\\.\\-..........\\...-............
....\\./..........\\.........\\../......||........\\..\\......-..........................................\\....\\....
|...........\\.............../.....|............|..............\\...............-............|....\\.....-.......
.||................................|..|..\\../...-........................\\..................\\.......|.........
....................-.....\\..........................-|--|../.\\............................||......../........
........|..../........................|........\\....-...|.../.............|.../../....\\..-..............-.....
.......\\...\\......-...-.....................|....\\............-...|.-....\\.....-......-.......................
..-......./...................../..../..........-\\......./..-./.................\\.\\..............|............
....../............../................\\.........-......./..................................././...|...........
......|-..................|-....|...../.|....................-............................\\...................
...........|.......................................|....\\........./......./../......................\\|........
..............|.\\........../.........................../......|.........................../............./../..
.........-......\\........\\........-..........|...|..............|........./....-........../.././......./......
............|.........\\.......\\.........|..............-......./.....|/....../......./....\\.........-\\........
.............-.../..................-.......\\...................-/......-.........|........................\\..
...............|.\\-|//..\\.|............................................/..../...........\\-....................
..........|......./...\\../|.............................................................................../...
...........................|.....--..................................-....\\...||-........./\\......-.....\\.\\...
`;

type Movement = [[number, number], [number, number]];

function moveBean(pos: [number, number], direction: [number, number], field: string[]): Movement[] {
    const nextI = pos[0] + direction[0];
    const nextJ = pos[1] + direction[1];
    if (nextI < 0 || nextJ < 0 || nextI >= field.length || nextJ >= field[0].length) {
        return [];
    }
    const next = field[nextI][nextJ];
    if (next === ".") {
        return [[[nextI, nextJ], direction]];
    }
    if (next === "\\") {
        if (direction[0] === 0 && direction[1] === 1) {
            return [[[nextI, nextJ], [1, 0]]];
        }
        if (direction[0] === 0 && direction[1] === -1) {
            return [[[nextI, nextJ], [-1, 0]]];
        }
        if (direction[0] === 1 && direction[1] === 0) {
            return [[[nextI, nextJ], [0, 1]]];
        }
        if (direction[0] === -1 && direction[1] === 0) {
            return [[[nextI, nextJ], [0, -1]]];
        }
        throw new Error("Should not happen " + direction + " " + next);
    }
    if (next === "/") {
        if (direction[0] === 0 && direction[1] === 1) {
            return [[[nextI, nextJ], [-1, 0]]];
        }
        if (direction[0] === 0 && direction[1] === -1) {
            return [[[nextI, nextJ], [1, 0]]];
        }
        if (direction[0] === 1 && direction[1] === 0) {
            return [[[nextI, nextJ], [0, -1]]];
        }
        if (direction[0] === -1 && direction[1] === 0) {
            return [[[nextI, nextJ], [0, 1]]];
        }
        throw new Error("Should not happen " + direction + " " + next);
    }
    if (next === "|") {
        if (direction[0] === 0 && direction[1] === 1) {
            const res = [];
            res.push([[nextI, nextJ], [-1, 0]]);
            res.push([[nextI, nextJ], [1, 0]]);
            return res;
        }
        if (direction[0] === 0 && direction[1] === -1) {
            const res = [];
            res.push([[nextI, nextJ], [-1, 0]]);
            res.push([[nextI, nextJ], [1, 0]]);
            return res;
        }
        if (direction[0] === 1 && direction[1] === 0) {
            return [[[nextI, nextJ], direction]];
        }
        if (direction[0] === -1 && direction[1] === 0) {
            return [[[nextI, nextJ], direction]];
        }
        throw new Error("Should not happen " + direction + " " + next);
    }
    if (next === "-") {
        if (direction[0] === 0 && direction[1] === 1) {
            return [[[nextI, nextJ], direction]];
        }
        if (direction[0] === 0 && direction[1] === -1) {
            return [[[nextI, nextJ], direction]];
        }
        if (direction[0] === 1 && direction[1] === 0) {
            const res = [];
            res.push([[nextI, nextJ], [0, -1]]);
            res.push([[nextI, nextJ], [0, 1]]);
            return res;
        }
        if (direction[0] === -1 && direction[1] === 0) {
            const res = [];
            res.push([[nextI, nextJ], [0, -1]]);
            res.push([[nextI, nextJ], [0, 1]]);
            return res;
        }
        throw new Error("Should not happen " + direction + " " + next);
    }
    throw new Error("Should not happen " + direction + " " + next);
}

function toString(m: Movement) {
    return m[0][0] + "" + m[0][1] + m[1][0] + m[1][1];
}

function main(input: string) {
    const lines = input.split("\n").map(t => t.trim()).filter((t) => t);
    let sum = 0;

    let beans: Movement[] = [[[0, -1], [0, 1]]];
    const moves = new Map<number, Map<number, string[]>>();
    while (beans.length > 0) {
        const nextBeans = [];
        for (const bean of beans) {
            const i = bean[0][0];
            if (!moves.has(i)) {
                moves.set(i, new Map<number, string[]>());
            }
            const moveToj = moves.get(i);
            const j = bean[0][1];
            if (!moveToj.get(j)) {
                moveToj.set(j, [toString(bean)]);
            } else {
                const bs = moveToj.get(j);
                bs.push(toString(bean));
                moveToj.set(j, bs);
            }

            const newBeans = moveBean(bean[0], bean[1], lines).filter(b => !(moves.get(b[0][0])?.get(b[0][1])?.includes(toString(b))));
            if (newBeans.length) {
                nextBeans.push(...newBeans);
            }
        }
        beans = nextBeans;
    }

    for (let i = 0; i < lines.length; i++) {
        const line = lines[i];
        const log = [];
        for (let j = 0; j < line.length; j++) {
            if (moves.get(i)?.get(j)) {
                log.push("#");
            } else {
                log.push(".");
            }
        }
        console.log(log.join(""));
    }

    for (const [i, moveToj] of moves.entries()) {
        for (const [j, _] of moveToj) {
            sum += 1;
        }
    }

    console.log(sum - 1);
}

console.log("test");
main(test);
console.log("task");
main(task);
console.log("done");
